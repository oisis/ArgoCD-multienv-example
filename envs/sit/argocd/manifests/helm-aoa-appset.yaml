---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-aoa
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/oisis/ArgoCD-multienv-example.git
                    revision: HEAD
                    files:
                      - path: envs/dev/apps-config.yaml
                - list:
                    elementsYaml: "{{ .helm_apps | toJson }}"
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/oisis/ArgoCD-multienv-example.git
                    revision: HEAD
                    files:
                      - path: envs/dev/apps-config.yaml
                - list:
                    elementsYaml: "{{ .common_params | toJson }}"
  template:
    metadata:
      name: '{{.name}}'
      labels:
        custom.label/deployed-by: "helm-aoa"
        custom.label/environment: "{{.environment}}"
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: '{{.project}}'
      sources:
        - repoURL: https://github.com/oisis/ArgoCD-multienv-example.git
          targetRevision: HEAD
          ref: values
        - chart: '{{.chart}}'
          repoURL: '{{.repoUrl}}'
          targetRevision: '{{.targetRevision}}'
          helm:
            ignoreMissingValueFiles: true
            valueFiles:
              - $values/apps/{{.name}}/values.yaml
              - $values/envs/{{.environment}}/{{.name}}/values.yaml
        - repoURL: https://github.com/oisis/ArgoCD-multienv-example.git
          targetRevision: HEAD
          path: apps/{{.name}}/manifests
          directory:
            recurse: true
        - repoURL: https://github.com/oisis/ArgoCD-multienv-example.git
          targetRevision: HEAD
          path: envs/{{.environment}}/{{.name}}/manifests
          directory:
            recurse: true
      destination:
        name: "{{.environment}}"
        namespace: "{{.namespace}}"
      info:
        - name: 'Applicatation url:'
          value: "http://{{.name}}.{{.domain}}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: true
        syncOptions:
          - Validate=true
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
          - PruneLast=true